version: '3.9'

services:
  mongodb:
    image: mongo:latest
    container_name: moviebookingappmongodb
    ports:
      - "27017:27017"

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: moviebookingappzookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: moviebookingappkafka
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

  elasticsearch:
    build: elk/elasticsearch/
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"

  logstash:
    build: elk/logstash/
    container_name: logstash
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./elk/logstash/config:/etc/logstash/conf.d
    ports:
      - "9999:9999"
    links:
      - elasticsearch

  kibana:
    build: elk/kibana/
    container_name: kibana
    volumes:
      - ./elk/kibana/config/:/opt/kibana/config/
    ports:
      - "5601:5601"
    links:
      - elasticsearch


  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9090" ]

  grafana:
    image: grafana/grafana:9.1.5
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3000" ]

  moviebookingappspringboot:
    image: moviebookingapp:1.0
    container_name: moviebookingappspringboot
    restart: always
    ports:
      - "8080:8080"
    links:
      - mongodb
      - kafka

