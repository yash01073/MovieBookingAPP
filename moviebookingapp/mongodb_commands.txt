db.roles.insertMany([
  {
    name:"ROLE_USER"
  },
  {
    name:"ROLE_ADMIN"
  }
])

db.movie.insertMany([
  {
    movieName: "Avengers: Endgame",
    ticketsAllotted: 120,
    remainingTickets: 120,
    theatreName: "World Trade Park",
    status: "",
    bookedSeatNumbers: [],
    posterLink: "/assets/avengers.jpg",

  },
  {
    movieName: "Avengers: Endgame",
    ticketsAllotted: 120,
    remainingTickets: 120,
    theatreName: "GT Central",
    status: "",
    bookedSeatNumbers: [],
    posterLink: "/assets/avengers.jpg"
  },
  {
    movieName: "Deadpool",
    ticketsAllotted: 120,
    remainingTickets: 120,
    theatreName: "EP",
    status: "",
    bookedSeatNumbers: [],
    posterLink: "/assets/deadpool.jpg"
  },
  {
    movieName: "Spiderman: No way home",
    ticketsAllotted: 120,
    remainingTickets: 120,
    theatreName: "Rajmandir",
    status: "",
    bookedSeatNumbers: [],
    posterLink: "/assets/spiderman.jpg"
  }
])

db.movie.createIndex({ movieName: 1, theatreName: 1 }, { unique: true })
db.movie.deleteMany({})

start in local
/bin:mongod

Access mongo in docker
docker exec -it containername bash
mongosh
show dbs

Build springboot image
 docker build -t moviebookingapp:1.0 . 



